/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface EclAccordion {
    'styleClass': string;
  }
  interface EclAccordionItem {
    'isExpanded': boolean;
    'label': string;
    'styleClass': string;
  }
  interface EclButton {
    'styleClass': string;
    'type': string;
  }
  interface EclExpandable {
    'isExpanded': boolean;
    'styleClass': string;
  }
  interface EclIcon {
    'color': string;
    'icon': string;
    'size': string;
    'styleClass': string;
    'transform': string;
  }
  interface EclMessage {
    'styleClass': string;
    'title': string;
    'typeClass': string;
  }
  interface EclShowcase {}
  interface EclSvgDefinitions {}
  interface EclTag {
    'isRemovable': boolean;
    'styleClass': string;
  }
}

declare global {


  interface HTMLEclAccordionElement extends Components.EclAccordion, HTMLStencilElement {}
  var HTMLEclAccordionElement: {
    prototype: HTMLEclAccordionElement;
    new (): HTMLEclAccordionElement;
  };

  interface HTMLEclAccordionItemElement extends Components.EclAccordionItem, HTMLStencilElement {}
  var HTMLEclAccordionItemElement: {
    prototype: HTMLEclAccordionItemElement;
    new (): HTMLEclAccordionItemElement;
  };

  interface HTMLEclButtonElement extends Components.EclButton, HTMLStencilElement {}
  var HTMLEclButtonElement: {
    prototype: HTMLEclButtonElement;
    new (): HTMLEclButtonElement;
  };

  interface HTMLEclExpandableElement extends Components.EclExpandable, HTMLStencilElement {}
  var HTMLEclExpandableElement: {
    prototype: HTMLEclExpandableElement;
    new (): HTMLEclExpandableElement;
  };

  interface HTMLEclIconElement extends Components.EclIcon, HTMLStencilElement {}
  var HTMLEclIconElement: {
    prototype: HTMLEclIconElement;
    new (): HTMLEclIconElement;
  };

  interface HTMLEclMessageElement extends Components.EclMessage, HTMLStencilElement {}
  var HTMLEclMessageElement: {
    prototype: HTMLEclMessageElement;
    new (): HTMLEclMessageElement;
  };

  interface HTMLEclShowcaseElement extends Components.EclShowcase, HTMLStencilElement {}
  var HTMLEclShowcaseElement: {
    prototype: HTMLEclShowcaseElement;
    new (): HTMLEclShowcaseElement;
  };

  interface HTMLEclSvgDefinitionsElement extends Components.EclSvgDefinitions, HTMLStencilElement {}
  var HTMLEclSvgDefinitionsElement: {
    prototype: HTMLEclSvgDefinitionsElement;
    new (): HTMLEclSvgDefinitionsElement;
  };

  interface HTMLEclTagElement extends Components.EclTag, HTMLStencilElement {}
  var HTMLEclTagElement: {
    prototype: HTMLEclTagElement;
    new (): HTMLEclTagElement;
  };
  interface HTMLElementTagNameMap {
    'ecl-accordion': HTMLEclAccordionElement;
    'ecl-accordion-item': HTMLEclAccordionItemElement;
    'ecl-button': HTMLEclButtonElement;
    'ecl-expandable': HTMLEclExpandableElement;
    'ecl-icon': HTMLEclIconElement;
    'ecl-message': HTMLEclMessageElement;
    'ecl-showcase': HTMLEclShowcaseElement;
    'ecl-svg-definitions': HTMLEclSvgDefinitionsElement;
    'ecl-tag': HTMLEclTagElement;
  }
}

declare namespace LocalJSX {
  interface EclAccordion {
    'styleClass'?: string;
  }
  interface EclAccordionItem {
    'isExpanded'?: boolean;
    'label'?: string;
    'styleClass'?: string;
  }
  interface EclButton {
    'styleClass'?: string;
    'type'?: string;
  }
  interface EclExpandable {
    'isExpanded'?: boolean;
    'styleClass'?: string;
  }
  interface EclIcon {
    'color'?: string;
    'icon'?: string;
    'size'?: string;
    'styleClass'?: string;
    'transform'?: string;
  }
  interface EclMessage {
    'styleClass'?: string;
    'title'?: string;
    'typeClass'?: string;
  }
  interface EclShowcase {}
  interface EclSvgDefinitions {}
  interface EclTag {
    'isRemovable'?: boolean;
    'styleClass'?: string;
  }

  interface IntrinsicElements {
    'ecl-accordion': EclAccordion;
    'ecl-accordion-item': EclAccordionItem;
    'ecl-button': EclButton;
    'ecl-expandable': EclExpandable;
    'ecl-icon': EclIcon;
    'ecl-message': EclMessage;
    'ecl-showcase': EclShowcase;
    'ecl-svg-definitions': EclSvgDefinitions;
    'ecl-tag': EclTag;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'ecl-accordion': LocalJSX.EclAccordion & JSXBase.HTMLAttributes<HTMLEclAccordionElement>;
      'ecl-accordion-item': LocalJSX.EclAccordionItem & JSXBase.HTMLAttributes<HTMLEclAccordionItemElement>;
      'ecl-button': LocalJSX.EclButton & JSXBase.HTMLAttributes<HTMLEclButtonElement>;
      'ecl-expandable': LocalJSX.EclExpandable & JSXBase.HTMLAttributes<HTMLEclExpandableElement>;
      'ecl-icon': LocalJSX.EclIcon & JSXBase.HTMLAttributes<HTMLEclIconElement>;
      'ecl-message': LocalJSX.EclMessage & JSXBase.HTMLAttributes<HTMLEclMessageElement>;
      'ecl-showcase': LocalJSX.EclShowcase & JSXBase.HTMLAttributes<HTMLEclShowcaseElement>;
      'ecl-svg-definitions': LocalJSX.EclSvgDefinitions & JSXBase.HTMLAttributes<HTMLEclSvgDefinitionsElement>;
      'ecl-tag': LocalJSX.EclTag & JSXBase.HTMLAttributes<HTMLEclTagElement>;
    }
  }
}


